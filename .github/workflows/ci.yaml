name: Rust CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  general-checks:
    runs-on: matterlabs-ci-runner-high-performance

    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          submodule: "recursive"

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: nightly-2025-05-20
          components: clippy, rustfmt

      - name: Setup cache dependencies
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4.2.4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Check formatting
        run: cargo fmt --all --check

      # no-default-features is set because the code is a mix of GPU/non-GPU compliant code
      # the flag needs to be removed once we allow both version to be build and control it via env var
      # these changes will be removed once https://github.com/matter-labs/prover-subsystem-internal/issues/49 is done
      - name: Run Clippy
        run: cargo clippy --no-default-features -- -D warnings

      - name: Build
        run: cargo build --verbose --release --no-default-features

  gpu-tests:
    runs-on: matterlabs-ci-gpu-runner
    container:
      image: nvidia/cuda:12.9.1-devel-ubuntu22.04
    env:
      RUST_TOOLCHAIN: nightly-2025-05-20
      BELLMAN_CUDA_DIR: ${{ github.workspace }}/bellman-cuda
      CUDAARCHS: 89

    steps:
      - name: Prepare environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          apt update && apt install -y cmake git jq libssl-dev pkg-config wget curl \
            build-essential libclang-dev
          echo "/usr/local/nvidia/bin:/usr/local/cuda/bin" >> $GITHUB_PATH

      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          submodules: "recursive"

      - name: Setup rustup
        run: |
          wget -q -O - https://sh.rustup.rs | bash -s -- -y --default-toolchain $RUST_TOOLCHAIN --profile minimal
          echo "${HOME}/.cargo/bin" >> "${GITHUB_PATH}"
          echo "export PATH=\"$HOME/.cargo/bin:\$PATH\"" >> "${HOME}/.bash_profile"

      - name: Setup CMAKE
        run: |
          curl -LO https://github.com/Kitware/CMake/releases/download/v3.30.2/cmake-3.30.2-linux-x86_64.sh && \
            chmod +x cmake-3.30.2-linux-x86_64.sh && \
            ./cmake-3.30.2-linux-x86_64.sh --skip-license --prefix=/usr/local

      - name: Check CUDA version
        run: |
          nvcc --version

      - name: Prepare bellman-cuda directory
        shell: bash
        run: |
          release=($(curl --silent https://api.github.com/repos/matter-labs/era-bellman-cuda/releases | jq -r '.[0] | .name, .tarball_url, .assets[0].browser_download_url'))
          curl --silent -L "${release[1]}" --output bellman-cuda-source.tar.gz
          curl --silent -L "${release[2]}" --output bellman-cuda.tar.gz
          mkdir -p bellman-cuda
          tar xvfz bellman-cuda.tar.gz -C ./bellman-cuda
          tar xvfz bellman-cuda-source.tar.gz -C ./bellman-cuda --strip-components=1 --wildcards \*/src/

      - name: Build with GPU features
        run: |
          cargo build --verbose --release --features gpu

      - name: Run tests with GPU features
        run: |
          cargo test --release --verbose --features gpu
